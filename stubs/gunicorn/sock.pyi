from _typeshed import Incomplete
from gunicorn import util as util

class BaseSocket:
    log: Incomplete
    conf: Incomplete
    cfg_addr: Incomplete
    sock: Incomplete
    def __init__(self, address, conf, log, fd: Incomplete | None = ...) -> None: ...
    def __getattr__(self, name): ...
    def set_options(self, sock, bound: bool = ...): ...
    def bind(self, sock) -> None: ...
    def close(self) -> None: ...

class TCPSocket(BaseSocket):
    FAMILY: Incomplete
    def set_options(self, sock, bound: bool = ...): ...

class TCP6Socket(TCPSocket):
    FAMILY: Incomplete

class UnixSocket(BaseSocket):
    FAMILY: Incomplete
    def __init__(self, addr, conf, log, fd: Incomplete | None = ...) -> None: ...
    def bind(self, sock) -> None: ...

def create_sockets(conf, log, fds: Incomplete | None = ...): ...
def close_sockets(listeners, unlink: bool = ...) -> None: ...
